syntax = "proto3";
package kujira.scheduler;

import "gogoproto/gogo.proto";
import "scheduler/hook.proto";
import "cosmos/base/v1beta1/coin.proto";

// this line is used by starport scaffolding # proto/tx/import

option go_package = "kujira/x/scheduler/types";

// Msg defines the Msg service.
service Msg {
  rpc CreateHook(MsgCreateHook) returns (MsgCreateHookResponse);
  rpc UpdateHook(MsgUpdateHook) returns (MsgUpdateHookResponse);
  rpc DeleteHook(MsgDeleteHook) returns (MsgDeleteHookResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgCreateHook {
  string creator = 1;
  string executor = 2;
  string contract = 3;
  bytes msg = 4  [ (gogoproto.casttype) = "github.com/CosmWasm/wasmd/x/wasm/types.RawContractMessage" ];
  int64 frequency = 5;
  repeated cosmos.base.v1beta1.Coin funds = 6 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];

}

message MsgCreateHookResponse {
  uint64 id = 1;
}

message MsgUpdateHook {
  string creator = 1;
  uint64 id = 2;
  string executor = 3;
  string contract = 4;
  bytes msg = 5;
  int64 frequency = 6;
  repeated cosmos.base.v1beta1.Coin funds = 7 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];

}

message MsgUpdateHookResponse {}

message MsgDeleteHook {
  string creator = 1;
  uint64 id = 2;
}

message MsgDeleteHookResponse {}

// this line is used by starport scaffolding # proto/tx/message
